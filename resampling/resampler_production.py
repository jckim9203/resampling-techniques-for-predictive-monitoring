import numpy as np
import pandas as pd
import sys
import six
sys.modules['sklearn.externals.six'] = six
from imblearn.over_sampling import ADASYN
from imblearn.under_sampling import AllKNN 
from imblearn.under_sampling import CondensedNearestNeighbour
from imblearn.under_sampling import EditedNearestNeighbours
from imblearn.under_sampling import InstanceHardnessThreshold
from imblearn.under_sampling import NeighbourhoodCleaningRule
from imblearn.under_sampling import NearMiss
from imblearn.under_sampling import OneSidedSelection
from imblearn.under_sampling import RepeatedEditedNearestNeighbours
from imblearn.over_sampling import SMOTE
from imblearn.over_sampling import BorderlineSMOTE
from imblearn.combine import SMOTEENN    
from imblearn.combine import SMOTETomek
from imblearn.under_sampling import TomekLinks    
from imblearn.over_sampling import RandomOverSampler
from imblearn.under_sampling import RandomUnderSampler

def resampling_assigner(imb_technique, FI_ova_X_train,FI_ova_y_train,FG_ova_X_train,FG_ova_y_train,GR27_ova_X_train,GR27_ova_y_train,LM_ova_X_train,LM_ova_y_train,LMM_ova_X_train,LMM_ova_y_train,PC_ova_X_train,PC_ova_y_train,RG12_ova_X_train,RG12_ova_y_train,RG2_ova_X_train,RG2_ova_y_train,RG3_ova_X_train,RG3_ova_y_train,RGM_ova_X_train,RGM_ova_y_train,RGQC_ova_X_train,RGQC_ova_y_train,T8_ova_X_train,T8_ova_y_train,TM10_ova_X_train,TM10_ova_y_train,TM4_ova_X_train,TM4_ova_y_train,TM5_ova_X_train,TM5_ova_y_train,TM6_ova_X_train,TM6_ova_y_train,TM8_ova_X_train,TM8_ova_y_train,TM9_ova_X_train,TM9_ova_y_train,TMQC_ova_X_train,TMQC_ova_y_train,TQC_ova_X_train,TQC_ova_y_train):
    print(imb_technique)
    if imb_technique == "ADASYN":
        FI_ada,FG_ada,GR27_ada,LM_ada,LMM_ada,PC_ada,RG12_ada,RG2_ada,RG3_ada,RGM_ada,RGQC_ada,T8_ada,TM10_ada,TM4_ada,TM5_ada,TM6_ada,TM8_ada,TM9_ada,TMQC_ada,TQC_ada = ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN(), ADASYN()
        FI_X_res, FI_y_res = FI_ada.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_ada.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_ada.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_ada.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_ada.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_ada.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_ada.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_ada.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_ada.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_ada.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_ada.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_ada.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_ada.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_ada.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_ada.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_ada.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_ada.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_ada.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_ada.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_ada.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "ALLKNN":
        FI_allknn,FG_allknn,GR27_allknn,LM_allknn,LMM_allknn,PC_allknn,RG12_allknn,RG2_allknn,RG3_allknn,RGM_allknn,RGQC_allknn,T8_allknn,TM10_allknn,TM4_allknn,TM5_allknn,TM6_allknn,TM8_allknn,TM9_allknn,TMQC_allknn,TQC_allknn = AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN(), AllKNN()
        FI_X_res, FI_y_res = FI_allknn.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_allknn.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_allknn.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_allknn.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_allknn.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_allknn.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_allknn.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_allknn.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_allknn.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_allknn.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_allknn.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_allknn.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_allknn.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_allknn.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_allknn.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_allknn.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_allknn.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_allknn.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_allknn.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_allknn.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "CNN":
        FI_cnn,FG_cnn,GR27_cnn,LM_cnn,LMM_cnn,PC_cnn,RG12_cnn,RG2_cnn,RG3_cnn,RGM_cnn,RGQC_cnn,T8_cnn,TM10_cnn,TM4_cnn,TM5_cnn,TM6_cnn,TM8_cnn,TM9_cnn,TMQC_cnn,TQC_cnn = CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour(), CondensedNearestNeighbour()
        FI_X_res, FI_y_res = FI_cnn.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_cnn.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_cnn.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_cnn.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_cnn.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_cnn.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_cnn.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_cnn.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_cnn.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_cnn.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_cnn.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_cnn.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_cnn.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_cnn.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_cnn.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_cnn.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_cnn.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_cnn.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_cnn.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_cnn.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "ENN":
        FI_enn,FG_enn,GR27_enn,LM_enn,LMM_enn,PC_enn,RG12_enn,RG2_enn,RG3_enn,RGM_enn,RGQC_enn,T8_enn,TM10_enn,TM4_enn,TM5_enn,TM6_enn,TM8_enn,TM9_enn,TMQC_enn,TQC_enn = EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours(), EditedNearestNeighbours()
        FI_X_res, FI_y_res = FI_enn.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_enn.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_enn.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_enn.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_enn.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_enn.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_enn.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_enn.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_enn.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_enn.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_enn.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_enn.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_enn.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_enn.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_enn.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_enn.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_enn.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_enn.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_enn.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_enn.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "IHT":
        FI_iht,FG_iht,GR27_iht,LM_iht,LMM_iht,PC_iht,RG12_iht,RG2_iht,RG3_iht,RGM_iht,RGQC_iht,T8_iht,TM10_iht,TM4_iht,TM5_iht,TM6_iht,TM8_iht,TM9_iht,TMQC_iht,TQC_iht = InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold(), InstanceHardnessThreshold()
        FI_X_res, FI_y_res = FI_iht.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_iht.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_iht.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_iht.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_iht.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_iht.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_iht.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_iht.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_iht.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_iht.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_iht.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_iht.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_iht.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_iht.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_iht.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_iht.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_iht.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_iht.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_iht.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_iht.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "NCR":
        FI_ncr,FG_ncr,GR27_ncr,LM_ncr,LMM_ncr,PC_ncr,RG12_ncr,RG2_ncr,RG3_ncr,RGM_ncr,RGQC_ncr,T8_ncr,TM10_ncr,TM4_ncr,TM5_ncr,TM6_ncr,TM8_ncr,TM9_ncr,TMQC_ncr,TQC_ncr = NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule(), NeighbourhoodCleaningRule()
        FI_ova_y_train = [0 if i == "Final Inspection Q.C." else 1 for i in FI_ova_y_train]
        FI_X_res, FI_y_res = FI_ncr.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_ova_y_train = [0 if i == "Flat Grinding - Machine 11" else 1 for i in FG_ova_y_train]
        FG_X_res, FG_y_res = FG_ncr.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_ova_y_train = [0 if i == "Grinding Rework - Machine 27" else 1 for i in GR27_ova_y_train]
        GR27_X_res, GR27_y_res = GR27_ncr.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_ova_y_train = [0 if i == "Lapping - Machine 1" else 1 for i in LM_ova_y_train]
        LM_X_res, LM_y_res = LM_ncr.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_ova_y_train = [0 if i == "Laser Marking - Machine 7" else 1 for i in LMM_ova_y_train]
        LMM_X_res, LMM_y_res = LMM_ncr.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_ova_y_train = [0 if i == "Packing" else 1 for i in PC_ova_y_train]
        PC_X_res, PC_y_res = PC_ncr.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_ova_y_train = [0 if i == "Round Grinding - Machine 12" else 1 for i in RG12_ova_y_train]
        RG12_X_res, RG12_y_res = RG12_ncr.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_ova_y_train = [0 if i == "Round Grinding - Machine 2" else 1 for i in RG2_ova_y_train]
        RG2_X_res, RG2_y_res = RG2_ncr.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_ova_y_train = [0 if i == "Round Grinding - Machine 3" else 1 for i in RG3_ova_y_train]
        RG3_X_res, RG3_y_res = RG3_ncr.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_ova_y_train = [0 if i == "Round Grinding - Manual" else 1 for i in RGM_ova_y_train]
        RGM_X_res, RGM_y_res = RGM_ncr.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_ova_y_train = [0 if i == "Round Grinding - Q.C." else 1 for i in RGQC_ova_y_train]
        RGQC_X_res, RGQC_y_res = RGQC_ncr.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_ova_y_train = [0 if i == "Turning - Machine 8" else 1 for i in T8_ova_y_train]
        T8_X_res, T8_y_res = T8_ncr.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_ova_y_train = [0 if i == "Turning & Milling - Machine 10" else 1 for i in TM10_ova_y_train]
        TM10_X_res, TM10_y_res = TM10_ncr.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_ova_y_train = [0 if i == "Turning & Milling - Machine 4" else 1 for i in TM4_ova_y_train]
        TM4_X_res, TM4_y_res = TM4_ncr.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_ova_y_train = [0 if i == "Turning & Milling - Machine 5" else 1 for i in TM5_ova_y_train]
        TM5_X_res, TM5_y_res = TM5_ncr.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_ova_y_train = [0 if i == "Turning & Milling - Machine 6" else 1 for i in TM6_ova_y_train]
        TM6_X_res, TM6_y_res = TM6_ncr.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_ova_y_train = [0 if i == "Turning & Milling - Machine 8" else 1 for i in TM8_ova_y_train]
        TM8_X_res, TM8_y_res = TM8_ncr.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_ova_y_train = [0 if i == "Turning & Milling - Machine 9" else 1 for i in TM9_ova_y_train]
        TM9_X_res, TM9_y_res = TM9_ncr.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_ova_y_train = [0 if i == "Turning & Milling Q.C." else 1 for i in TMQC_ova_y_train]
        TMQC_X_res, TMQC_y_res = TMQC_ncr.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_ova_y_train = [0 if i == "Turning Q.C." else 1 for i in TQC_ova_y_train]
        TQC_X_res, TQC_y_res = TQC_ncr.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "NM":
        FI_nm,FG_nm,GR27_nm,LM_nm,LMM_nm,PC_nm,RG12_nm,RG2_nm,RG3_nm,RGM_nm,RGQC_nm,T8_nm,TM10_nm,TM4_nm,TM5_nm,TM6_nm,TM8_nm,TM9_nm,TMQC_nm,TQC_nm = NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss(), NearMiss()
        FI_X_res, FI_y_res = FI_nm.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_nm.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_nm.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_nm.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_nm.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_nm.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_nm.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_nm.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_nm.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_nm.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_nm.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_nm.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_nm.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_nm.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_nm.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_nm.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_nm.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_nm.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_nm.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_nm.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "OSS":
        FI_oss,FG_oss,GR27_oss,LM_oss,LMM_oss,PC_oss,RG12_oss,RG2_oss,RG3_oss,RGM_oss,RGQC_oss,T8_oss,TM10_oss,TM4_oss,TM5_oss,TM6_oss,TM8_oss,TM9_oss,TMQC_oss,TQC_oss = OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection(), OneSidedSelection()
        FI_X_res, FI_y_res = FI_oss.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_oss.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_oss.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_oss.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_oss.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_oss.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_oss.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_oss.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_oss.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_oss.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_oss.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_oss.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_oss.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_oss.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_oss.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_oss.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_oss.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_oss.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_oss.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_oss.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "RENN":
        FI_renn,FG_renn,GR27_renn,LM_renn,LMM_renn,PC_renn,RG12_renn,RG2_renn,RG3_renn,RGM_renn,RGQC_renn,T8_renn,TM10_renn,TM4_renn,TM5_renn,TM6_renn,TM8_renn,TM9_renn,TMQC_renn,TQC_renn = RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours(), RepeatedEditedNearestNeighbours()
        FI_X_res, FI_y_res = FI_renn.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_renn.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_renn.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_renn.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_renn.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_renn.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_renn.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_renn.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_renn.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_renn.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_renn.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_renn.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_renn.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_renn.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_renn.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_renn.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_renn.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_renn.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_renn.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_renn.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "SMOTE":
        FI_sm,FG_sm,GR27_sm,LM_sm,LMM_sm,PC_sm,RG12_sm,RG2_sm,RG3_sm,RGM_sm,RGQC_sm,T8_sm,TM10_sm,TM4_sm,TM5_sm,TM6_sm,TM8_sm,TM9_sm,TMQC_sm,TQC_sm = SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE(), SMOTE()
        FI_X_res, FI_y_res = FI_sm.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_sm.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_sm.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_sm.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_sm.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_sm.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_sm.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_sm.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_sm.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_sm.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_sm.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_sm.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_sm.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_sm.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_sm.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_sm.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_sm.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_sm.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_sm.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_sm.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "BSMOTE":
        FI_bsm,FG_bsm,GR27_bsm,LM_bsm,LMM_bsm,PC_bsm,RG12_bsm,RG2_bsm,RG3_bsm,RGM_bsm,RGQC_bsm,T8_bsm,TM10_bsm,TM4_bsm,TM5_bsm,TM6_bsm,TM8_bsm,TM9_bsm,TMQC_bsm,TQC_bsm = BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE(), BorderlineSMOTE()
        FI_X_res, FI_y_res = FI_bsm.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_bsm.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_bsm.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_bsm.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_bsm.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_bsm.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_bsm.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_bsm.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_bsm.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_bsm.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_bsm.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_bsm.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_bsm.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_bsm.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_bsm.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_bsm.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_bsm.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_bsm.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_bsm.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_bsm.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "SMOTEENN":
        FI_smenn,FG_smenn,GR27_smenn,LM_smenn,LMM_smenn,PC_smenn,RG12_smenn,RG2_smenn,RG3_smenn,RGM_smenn,RGQC_smenn,T8_smenn,TM10_smenn,TM4_smenn,TM5_smenn,TM6_smenn,TM8_smenn,TM9_smenn,TMQC_smenn,TQC_smenn = SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN(), SMOTEENN()
        FI_X_res, FI_y_res = FI_smenn.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_smenn.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_smenn.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_smenn.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_smenn.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_smenn.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_smenn.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_smenn.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_smenn.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_smenn.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_smenn.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_smenn.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_smenn.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_smenn.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_smenn.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_smenn.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_smenn.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_smenn.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_smenn.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_smenn.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "SMOTETOMEK":
        FI_smtm,FG_smtm,GR27_smtm,LM_smtm,LMM_smtm,PC_smtm,RG12_smtm,RG2_smtm,RG3_smtm,RGM_smtm,RGQC_smtm,T8_smtm,TM10_smtm,TM4_smtm,TM5_smtm,TM6_smtm,TM8_smtm,TM9_smtm,TMQC_smtm,TQC_smtm = SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek(), SMOTETomek()
        FI_X_res, FI_y_res = FI_smtm.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_smtm.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_smtm.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_smtm.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_smtm.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_smtm.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_smtm.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_smtm.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_smtm.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_smtm.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_smtm.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_smtm.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_smtm.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_smtm.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_smtm.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_smtm.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_smtm.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_smtm.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_smtm.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_smtm.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "TOMEK":
        FI_tm,FG_tm,GR27_tm,LM_tm,LMM_tm,PC_tm,RG12_tm,RG2_tm,RG3_tm,RGM_tm,RGQC_tm,T8_tm,TM10_tm,TM4_tm,TM5_tm,TM6_tm,TM8_tm,TM9_tm,TMQC_tm,TQC_tm = TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks(), TomekLinks()
        FI_X_res, FI_y_res = FI_tm.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_tm.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_tm.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_tm.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_tm.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_tm.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_tm.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_tm.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_tm.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_tm.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_tm.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_tm.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_tm.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_tm.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_tm.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_tm.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_tm.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_tm.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_tm.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_tm.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "ROS":
        FI_ros,FG_ros,GR27_ros,LM_ros,LMM_ros,PC_ros,RG12_ros,RG2_ros,RG3_ros,RGM_ros,RGQC_ros,T8_ros,TM10_ros,TM4_ros,TM5_ros,TM6_ros,TM8_ros,TM9_ros,TMQC_ros,TQC_ros = RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler(), RandomOverSampler()
        FI_X_res, FI_y_res = FI_ros.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_ros.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_ros.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_ros.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_ros.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_ros.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_ros.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_ros.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_ros.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_ros.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_ros.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_ros.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_ros.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_ros.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_ros.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_ros.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_ros.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_ros.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_ros.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_ros.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    elif imb_technique == "RUS":
        FI_rus,FG_rus,GR27_rus,LM_rus,LMM_rus,PC_rus,RG12_rus,RG2_rus,RG3_rus,RGM_rus,RGQC_rus,T8_rus,TM10_rus,TM4_rus,TM5_rus,TM6_rus,TM8_rus,TM9_rus,TMQC_rus,TQC_rus = RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler(), RandomUnderSampler()
        FI_X_res, FI_y_res = FI_rus.fit_resample(FI_ova_X_train, FI_ova_y_train)
        FG_X_res, FG_y_res = FG_rus.fit_resample(FG_ova_X_train, FG_ova_y_train)
        GR27_X_res, GR27_y_res = GR27_rus.fit_resample(GR27_ova_X_train, GR27_ova_y_train)
        LM_X_res, LM_y_res = LM_rus.fit_resample(LM_ova_X_train, LM_ova_y_train)
        LMM_X_res, LMM_y_res = LMM_rus.fit_resample(LMM_ova_X_train, LMM_ova_y_train)
        PC_X_res, PC_y_res = PC_rus.fit_resample(PC_ova_X_train, PC_ova_y_train)
        RG12_X_res, RG12_y_res = RG12_rus.fit_resample(RG12_ova_X_train, RG12_ova_y_train)
        RG2_X_res, RG2_y_res = RG2_rus.fit_resample(RG2_ova_X_train, RG2_ova_y_train)
        RG3_X_res, RG3_y_res = RG3_rus.fit_resample(RG3_ova_X_train, RG3_ova_y_train)
        RGM_X_res, RGM_y_res = RGM_rus.fit_resample(RGM_ova_X_train, RGM_ova_y_train)
        RGQC_X_res, RGQC_y_res = RGQC_rus.fit_resample(RGQC_ova_X_train, RGQC_ova_y_train)
        T8_X_res, T8_y_res = T8_rus.fit_resample(T8_ova_X_train, T8_ova_y_train)
        TM10_X_res, TM10_y_res = TM10_rus.fit_resample(TM10_ova_X_train, TM10_ova_y_train)
        TM4_X_res, TM4_y_res = TM4_rus.fit_resample(TM4_ova_X_train, TM4_ova_y_train)
        TM5_X_res, TM5_y_res = TM5_rus.fit_resample(TM5_ova_X_train, TM5_ova_y_train)
        TM6_X_res, TM6_y_res = TM6_rus.fit_resample(TM6_ova_X_train, TM6_ova_y_train)
        TM8_X_res, TM8_y_res = TM8_rus.fit_resample(TM8_ova_X_train, TM8_ova_y_train)
        TM9_X_res, TM9_y_res = TM9_rus.fit_resample(TM9_ova_X_train, TM9_ova_y_train)
        TMQC_X_res, TMQC_y_res = TMQC_rus.fit_resample(TMQC_ova_X_train, TMQC_ova_y_train)
        TQC_X_res, TQC_y_res = TQC_rus.fit_resample(TQC_ova_X_train, TQC_ova_y_train)
    return FI_X_res,FI_y_res,FG_X_res,FG_y_res,GR27_X_res,GR27_y_res,LM_X_res,LM_y_res,LMM_X_res,LMM_y_res,PC_X_res,PC_y_res,RG12_X_res,RG12_y_res,RG2_X_res,RG2_y_res,RG3_X_res,RG3_y_res,RGM_X_res,RGM_y_res,RGQC_X_res,RGQC_y_res,T8_X_res,T8_y_res,TM10_X_res,TM10_y_res,TM4_X_res,TM4_y_res,TM5_X_res,TM5_y_res,TM6_X_res,TM6_y_res,TM8_X_res,TM8_y_res,TM9_X_res,TM9_y_res,TMQC_X_res,TMQC_y_res,TQC_X_res,TQC_y_res
